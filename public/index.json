[{"content":"\u003cp\u003eI started filing my own taxes a few years ago by reading up online/watching YouTube videos.\u003c/p\u003e\n\u003cp\u003eComing from a non finance background, I spent a lot of time reading up to understand the different sections, deductions, etc. when I first filed my own taxes. I learnt a lot in the process and was exhilarated when the ITR went through without any issues.\u003c/p\u003e\n\u003cp\u003eFast forward a year and I had to file taxes again. To my surprise, I struggled to recollect majority of the things I\u0026rsquo;d learnt last time and had to go through the same process again.\u003c/p\u003e\n\u003cp\u003eThis time, I decided to do my future self a favor by jotting down high level pointers that\u0026rsquo;d help me in filing\nfuture tasks.\u003c/p\u003e\n\u003cp\u003eNow, that I\u0026rsquo;ve benefitted from this for multiple years, I thought why not put this out for others too.\u003c/p\u003e\n\u003ch2 id=\"forms\"\u003eForms\u003c/h2\u003e\n\u003ch3 id=\"proposed-investment-declaration\"\u003eProposed Investment Declaration\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eTentative investments the individual is planning to make in the said FY\u003c/li\u003e\n\u003cli\u003eTo be furnished by individual to employer at the start of the FY\u003c/li\u003e\n\u003cli\u003eEmployer deducts TDS based on this declaration\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"form-12bb\"\u003eForm 12BB\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eStatement of claims submitted by individual to employer at the end of FY\u003c/li\u003e\n\u003cli\u003eSubmit proofs to validate that the tentative investments declared were actually abided by\u003c/li\u003e\n\u003cli\u003eShould tally with the Proposed Investment Declaration made at the start of the FY\u003c/li\u003e\n\u003cli\u003eDiscrepancy would result in higher TDS deduction\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"form-16\"\u003eForm 16\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eCertificate issued by the employer to the individual at the end of the FY\u003c/li\u003e\n\u003cli\u003eDenotes the tax (TDS) paid by the employer on behalf of the individual\u003c/li\u003e\n\u003cli\u003eCrucial for filing IT Returns\u003c/li\u003e\n\u003cli\u003eTwo Parts\n\u003cul\u003e\n\u003cli\u003e16A - Contains the amount deducted and date on which it was deposited with the government\u003c/li\u003e\n\u003cli\u003e16B - Detailed breakup of the individual\u0026rsquo;s salary and how TDS was calculated based on the Proposed Investment Declaration \u0026amp; Form 12BB in the entire FY\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"form-26as\"\u003eForm 26AS\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eStatement of tax amount deducted (TDS for salaried individuals) issued by the IT Dept\u003c/li\u003e\n\u003cli\u003eShould tally with Form 16 denoting that TDS deducted by employer was indeed deposited to the government\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"sections\"\u003eSections\u003c/h2\u003e\n\u003ch3 id=\"10-13a---house-rent-allowance\"\u003e10 (13A) - \u003cstrong\u003eHouse Rent Allowance\u003c/strong\u003e\u003c/h3\u003e\n\u003cp\u003eLowest of the following\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eActual HRA received from employer\u003c/li\u003e\n\u003cli\u003eFor those living in metro cities: 50% of (Basic salary + Dearness allowance)\n\u003c/br\u003eFor those living in non-metro cities: 40% of (Basic salary + Dearness allowance)\u003c/li\u003e\n\u003cli\u003eActual rent paid minus 10% of (Basic salary + Dearness allowance)\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch3 id=\"24b\"\u003e24B\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eDeduction on Interest amount towards Home Loan (₹2L)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"80c\"\u003e80C\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003ePublic Provident Fund\u003c/li\u003e\n\u003cli\u003eEmployer Provident Fund\u003c/li\u003e\n\u003cli\u003eEquity Linked Savings Scheme\u003c/li\u003e\n\u003cli\u003ePrincipal amount towards Home Loan\u003c/li\u003e\n\u003cli\u003eFixed Deposits\u003c/li\u003e\n\u003cli\u003eTuition Fees\u003c/li\u003e\n\u003cli\u003eLife Insurance Premium (LIC/ULIP/Term)\u003c/li\u003e\n\u003cli\u003eNational Saving Certificate (Post Office)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"80ccc\"\u003e80CCC\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003ePension Plans\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"80ccd-1\"\u003e80CCD (1)\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eEmployee\u0026rsquo;s contribution to NPS (National Pension Scheme)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"80ccd-1b\"\u003e80CCD (1B)\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eAdditional deduction of ₹50,000 is allowed for amount deposited to NPS account\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"80ccd-2\"\u003e80CCD (2)\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eEmployer\u0026rsquo;s contribution to NPS\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"maximum-deduction-via-80cce-80c--80ccc--80ccd\"\u003eMaximum Deduction via 80CCE (80C + 80CCC + 80CCD)\u003c/h3\u003e\n\u003cp\u003e\u003cspan style=\"color:orange\"\u003eA. 80C + 80CCC + 80CCD (1) = ₹1,50,000\u003c/span\u003e\u003c/p\u003e\n\u003cp\u003e\u003cspan style=\"color:orange\"\u003eB. 80CCD (1B) = ₹50,000\u003c/span\u003e\u003c/p\u003e\n\u003cp\u003e\u003cspan style=\"color:green\"\u003e\u003cstrong\u003e80CCE = A + B = ₹2,00,000\u003c/strong\u003e\u003c/span\u003e\u003c/p\u003e\n\u003ch3 id=\"80tta\"\u003e80TTA\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eDeduction for Income from Savings Bank Interest (upto ₹10,000)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"80ttb-for-senior-citizens\"\u003e80TTB (for senior citizens)\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eDeduction for Income from Savings Bank Interest (upto ₹50,000)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"80d\"\u003e80D\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eMedical Insurance\n\u003cul\u003e\n\u003cli\u003eSelf, Spouse \u0026amp; Children - ₹25,000\u003c/li\u003e\n\u003cli\u003eParents - ₹25,000\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"80g\"\u003e80G\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eDonations\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"80gg\"\u003e80GG\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eHouse Rent Paid - if individual doesn\u0026rsquo;t get HRA from employer but pays rent\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"80e\"\u003e80E\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eEducation\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"80ee\"\u003e80EE\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eAdditional deduction for first time home buyers (upto ₹50,000)\u003c/li\u003e\n\u003cli\u003eValue of the house should be Rs 50 lakh or less\u003c/li\u003e\n\u003cli\u003eLoan taken for the house must be Rs 35 lakh or less\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"deductions\"\u003eDeductions\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eStandard Deductions - ₹50,000\u003c/li\u003e\n\u003cli\u003eTax on employment (Professional Tax) - ₹2,400\u003c/li\u003e\n\u003cli\u003eEntertainment Allowance - only applicable for Central/State government employees\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"guides\"\u003eGuides\u003c/h2\u003e\n\u003cp\u003e\n\n    \n    \u003cdiv style=\"position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;\"\u003e\n      \u003ciframe allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" allowfullscreen=\"allowfullscreen\" loading=\"eager\" referrerpolicy=\"strict-origin-when-cross-origin\" src=\"https://www.youtube.com/embed/YaG5fZ-wFlk?autoplay=0\u0026controls=1\u0026end=0\u0026loop=0\u0026mute=0\u0026start=0\" style=\"position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;\" title=\"YouTube video\"\n      \u003e\u003c/iframe\u003e\n    \u003c/div\u003e\n\n\u003c/br\u003e\n\n\n    \n    \u003cdiv style=\"position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;\"\u003e\n      \u003ciframe allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" allowfullscreen=\"allowfullscreen\" loading=\"eager\" referrerpolicy=\"strict-origin-when-cross-origin\" src=\"https://www.youtube.com/embed/iuVxJgOm5TY?autoplay=0\u0026controls=1\u0026end=0\u0026loop=0\u0026mute=0\u0026start=0\" style=\"position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;\" title=\"YouTube video\"\n      \u003e\u003c/iframe\u003e\n    \u003c/div\u003e\n\n\u003c/br\u003e\u003c/p\u003e\n\u003ch2 id=\"helpful-links\"\u003eHelpful Links\u003c/h2\u003e\n\u003cp\u003e\u003ca\n\n\t\n\t\n\t\thref = \"https://cleartax.in/s/which-itr-to-file\"\n\n\t\t\n\n\t\n\n\t\n\n\t\ttarget = \"_blank\"\n\t\trel = \"nofollow noopener noreferrer\"\n\n\t\t\u003e\n\t\n\t\u003cspan\u003e\n\t\tWhich ITR Should I File? ITR Types, Income Tax Returns, ITR forms for FY 2021-22 (AY 2022-23)\n\t\u003c/span\u003e\n\n\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e\u003ca\n\n\t\n\t\n\t\thref = \"https://cleartax.in/s/80c-80-deductions\"\n\n\t\t\n\n\t\n\n\t\n\n\t\ttarget = \"_blank\"\n\t\trel = \"nofollow noopener noreferrer\"\n\n\t\t\u003e\n\t\n\t\u003cspan\u003e\n\t\tSection 80 Deduction : Income Tax Deductions under Section 80C, 80CCD, 80CCC, 80D\n\t\u003c/span\u003e\n\n\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e\u003ca\n\n\t\n\t\n\t\thref = \"https://www.incometax.gov.in/iec/foportal/\"\n\n\t\t\n\n\t\n\n\t\n\n\t\ttarget = \"_blank\"\n\t\trel = \"nofollow noopener noreferrer\"\n\n\t\t\u003e\n\t\n\t\u003cspan\u003e\n\t\tITR Filing Portal\n\t\u003c/span\u003e\n\n\u003c/a\u003e\u003c/p\u003e\n\u003ch2 id=\"keep-below-things-handy\"\u003eKeep below things handy\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eForm 16\u003c/li\u003e\n\u003cli\u003eAnnual Information Statement (AIS) \u0026amp; Taxpayer Information Summary (TIS)\u003c/li\u003e\n\u003cli\u003e26AS\u003c/li\u003e\n\u003cli\u003eBank Statements\u003c/li\u003e\n\u003cli\u003eEquity Investment Tax P\u0026amp;L\u003c/li\u003e\n\u003cli\u003eRent Receipts\u003c/li\u003e\n\u003cli\u003eReceipts for Donations\u003c/li\u003e\n\u003c/ul\u003e\n","description":"","image":"/images/blogs/itr_cheatsheet/cover.webp","permalink":"https://cyrilpillai.com/blogs/itr_cheatsheet/","title":"ITR Filing Cheatsheet"},{"content":"\u003cp\u003eThis post is a follow up to \u003ca\n\n\t\n\n\t\n\n\t\u003e\n\t\n\t\u003cspan\u003e\n\t\tAre You Building Your App Right?\n\t\u003c/span\u003e\n\n\u003c/a\u003e If you haven’t read that one, I highly recommend going through it first:\u003c/p\u003e\n\u003cp\u003eNow that you’re all caught up, let’s dive back into what you need to build a great app.\u003c/p\u003e\n\u003ch2 id=\"1-graphics\"\u003e1. Graphics\u003c/h2\u003e\n\u003cblockquote\u003e\n\u003ch6 id=\"a-picture-is-worth-a-thousand-words\"\u003eA picture is worth a thousand words\u003c/h6\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eMost of the apps in this day and age are driven by graphics. Ingenious graphical illustrations and visual elements in products make them pleasing to use.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eConfession: I sometimes play Chrome’s Downasaur (type \u003cem\u003echrome://dino/\u003c/em\u003e) even when I have internet 😅.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eThis means we have to give extra attention to our illustrations and setup a good infrastructure for delivering images to the app. A \u003ca\n\n\t\n\t\n\t\thref = \"https://en.wikipedia.org/wiki/Content_delivery_network\"\n\n\t\t\n\n\t\n\n\t\n\n\t\ttarget = \"_blank\"\n\t\trel = \"nofollow noopener noreferrer\"\n\n\t\t\u003e\n\t\n\t\u003cspan\u003e\n\t\tCDN\n\t\u003c/span\u003e\n\n\u003c/a\u003e is mandatory for this purpose — to make sure users see these images as soon as possible.\u003c/p\u003e\n\u003cp\u003eAs most apps show a preview before showing a full-blown image, it’s also useful to cache multiple variants of a single image based on different sizes like thumbnails as well as small, medium, and large versions. Alternatively, you can use something more sophisticated — like a URL-based image manipulation service.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eUseful Tools: \u003ca\n\n\t\n\t\n\t\thref = \"https://aws.amazon.com/s3/\"\n\n\t\t\n\n\t\n\n\t\n\n\t\ttarget = \"_blank\"\n\t\trel = \"nofollow noopener noreferrer\"\n\n\t\t\u003e\n\t\n\t\u003cspan\u003e\n\t\tAmazon S3\n\t\u003c/span\u003e\n\n\u003c/a\u003e, \u003ca\n\n\t\n\t\n\t\thref = \"https://aws.amazon.com/cloudfront/[\"\n\n\t\t\n\n\t\n\n\t\n\n\t\ttarget = \"_blank\"\n\t\trel = \"nofollow noopener noreferrer\"\n\n\t\t\u003e\n\t\n\t\u003cspan\u003e\n\t\tAmazon CloudFront\n\t\u003c/span\u003e\n\n\u003c/a\u003e, \u003ca\n\n\t\n\t\n\t\thref = \"https://cloudinary.com/\"\n\n\t\t\n\n\t\n\n\t\n\n\t\ttarget = \"_blank\"\n\t\trel = \"nofollow noopener noreferrer\"\n\n\t\t\u003e\n\t\n\t\u003cspan\u003e\n\t\tCloudinary\n\t\u003c/span\u003e\n\n\u003c/a\u003e, \u003ca\n\n\t\n\t\n\t\thref = \"https://imagekit.io/\"\n\n\t\t\n\n\t\n\n\t\n\n\t\ttarget = \"_blank\"\n\t\trel = \"nofollow noopener noreferrer\"\n\n\t\t\u003e\n\t\n\t\u003cspan\u003e\n\t\tImageKit\n\t\u003c/span\u003e\n\n\u003c/a\u003e, etc.\u003c/strong\u003e\u003c/p\u003e\n\u003ch2 id=\"2-app-versioning\"\u003e2. App Versioning\u003c/h2\u003e\n\u003cp\u003eAs apps evolve continuously, versioning becomes super important and it helps to have a particular convention in place since the inception of the app. App versions should readily convey the degree of changes between app updates. At Gojek, we use \u003ca\n\n\t\n\t\n\t\thref = \"https://semver.org/\"\n\n\t\t\n\n\t\n\n\t\n\n\t\ttarget = \"_blank\"\n\t\trel = \"nofollow noopener noreferrer\"\n\n\t\t\u003e\n\t\n\t\u003cspan\u003e\n\t\tSemantic Versioning\n\t\u003c/span\u003e\n\n\u003c/a\u003e and the version name looks like this\u003c/p\u003e\n\u003cblockquote\u003e\n\u003ch6 id=\"v3320-majorminorpatch\"\u003ev3.32.0 [MAJOR.MINOR.PATCH]\u003c/h6\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eAs the name suggests:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eincrement \u003cem\u003eMAJOR\u003c/em\u003e when you make incompatible API changes or drastic changes — like codebase rewrite or design overhauls.\u003c/li\u003e\n\u003cli\u003eincrement \u003cem\u003eMINOR\u003c/em\u003e when you add functionality that’s backward compatible — like introducing a new feature.\u003c/li\u003e\n\u003cli\u003eincrement \u003cem\u003ePATCH\u003c/em\u003e when you make hot-fixes that are backward compatible — like fixing a bug in a newly released feature.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"3-app-rollout\"\u003e3. App Rollout\u003c/h2\u003e\n\u003cp\u003eEvery app release should be rolled out strategically instead of releasing it to production to all the users in one shot.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003ch6 id=\"this-is-where-release-life-cyclehttpsenwikipediaorgwikisoftware_release_life_cycle-plays-an-important-role\"\u003eThis is where \u003ca\n\n\t\n\t\n\t\thref = \"https://en.wikipedia.org/wiki/Software_release_life_cycle\"\n\n\t\t\n\n\t\n\n\t\n\n\t\ttarget = \"_blank\"\n\t\trel = \"nofollow noopener noreferrer\"\n\n\t\t\u003e\n\t\n\t\u003cspan\u003e\n\t\trelease life cycle\n\t\u003c/span\u003e\n\n\u003c/a\u003e plays an important role.\u003c/h6\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eSince Gojek is a #SuperApp comprising of a bunch of products that are being built by different teams, we follow something called \u003ca\n\n\t\n\t\n\t\thref = \"https://en.wikipedia.org/wiki/Software_release_train\"\n\n\t\t\n\n\t\n\n\t\n\n\t\ttarget = \"_blank\"\n\t\trel = \"nofollow noopener noreferrer\"\n\n\t\t\u003e\n\t\n\t\u003cspan\u003e\n\t\tSoftware Release Train\n\t\u003c/span\u003e\n\n\u003c/a\u003e to release app updates every two weeks.\u003c/p\u003e\n\u003cp\u003eWe have nightly builds going out every day which are used by devs \u0026amp; QAs.\u003c/p\u003e\n\u003cp\u003eOnce a release candidate is created from the codebase for a particular release, it’s tested by the QAs and we upload it to the App Store only when QAs give a go ahead.\u003c/p\u003e\n\u003cp\u003eThe app is then uploaded to App Store, but is only released to our Alpha Users (who’ll bear with us if something breaks).\u003c/p\u003e\n\u003cp\u003eOnce, the app proves to be stable at this stage, we promote the app to production but proceed with a staged rollout. This involves incrementally increasing the percentage of the update’s availability until it’s 100 %.\u003c/p\u003e\n\u003ch2 id=\"4-notifications\"\u003e4. Notifications\u003c/h2\u003e\n\u003cblockquote\u003e\n\u003ch6 id=\"user-acquisition-is-hard-user-retention-is-harder\"\u003eUser acquisition is hard. User retention is harder.\u003c/h6\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eUser engagement is a crucial part of any product that wants to retain users and achieve/maintain high \u003ca\n\n\t\n\t\n\t\thref = \"https://en.wikipedia.org/wiki/Active_users\"\n\n\t\t\n\n\t\n\n\t\n\n\t\ttarget = \"_blank\"\n\t\trel = \"nofollow noopener noreferrer\"\n\n\t\t\u003e\n\t\n\t\u003cspan\u003e\n\t\tDAU/MAU\n\t\u003c/span\u003e\n\n\u003c/a\u003e count. App notifications are a great medium to engage your users and help retain them. But, it’s a double-edged sword.\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e• Send infrequent notifications and the user might uninstall the app due to inactivity.\n• Bombard the user with notifications and s/he will get irritated \u0026amp; uninstall the app.\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eThis is where analytics play an important role. You can use data to send targeted notifications to a particular cohort. As a user, it’s always pleasant to get personalised/tailored notifications.\u003c/p\u003e\n\u003cp\u003eThus, it’s super important to have a good infrastructure to collect user data, divide them into cohorts and run campaigns to keep them engaged.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eUseful Tools: \u003ca\n\n\t\n\t\n\t\thref = \"https://onesignal.com/\"\n\n\t\t\n\n\t\n\n\t\n\n\t\ttarget = \"_blank\"\n\t\trel = \"nofollow noopener noreferrer\"\n\n\t\t\u003e\n\t\n\t\u003cspan\u003e\n\t\tOneSignal\n\t\u003c/span\u003e\n\n\u003c/a\u003e, \u003ca\n\n\t\n\t\n\t\thref = \"https://pusher.com/\"\n\n\t\t\n\n\t\n\n\t\n\n\t\ttarget = \"_blank\"\n\t\trel = \"nofollow noopener noreferrer\"\n\n\t\t\u003e\n\t\n\t\u003cspan\u003e\n\t\tPusher\n\t\u003c/span\u003e\n\n\u003c/a\u003e, etc.\u003c/strong\u003e\u003c/p\u003e\n\u003ch2 id=\"5-security\"\u003e5. Security\u003c/h2\u003e\n\u003cp\u003eI can’t stress this enough, security of your product can make or break it (checkout \u003ca\n\n\t\n\t\n\t\thref = \"https://darknetdiaries.com/\"\n\n\t\t\n\n\t\n\n\t\n\n\t\ttarget = \"_blank\"\n\t\trel = \"nofollow noopener noreferrer\"\n\n\t\t\u003e\n\t\n\t\u003cspan\u003e\n\t\tDarkNet Diaries\n\t\u003c/span\u003e\n\n\u003c/a\u003e, if you’re not convinced already). Most companies don’t spend much time critically thinking from a security aspect while building their product initially, which proves to be a disaster later on.\u003c/p\u003e\n\u003cp\u003eNow, as mobile developers we don’t have the mindset of a security engineer which means we don’t think of leveraging a flaw in the product while we’re building it. The best way to compensate for this is to have a dedicated Security team.\u003c/p\u003e\n\u003cp\u003eAt Gojek, we have a dedicated \u003ca\n\n\t\n\t\n\t\thref = \"https://medium.com/gojekengineering/how-to-secure-a-superapp-304b1c4c5c89\"\n\n\t\t\n\n\t\n\n\t\n\n\t\ttarget = \"_blank\"\n\t\trel = \"nofollow noopener noreferrer\"\n\n\t\t\u003e\n\t\n\t\u003cspan\u003e\n\t\tSecurity team\n\t\u003c/span\u003e\n\n\u003c/a\u003e that scrutinises everything before we release anything to production. This is not feasible for indie developers or small startups though, but this doesn’t mean we (mobile devs) should completely ignore this aspect or blame the management for not having a dedicated team.\u003c/p\u003e\n\u003cp\u003eWe can still follow basic security guidelines for mobile app security — obfuscating code, not storing sensitive access keys in the codebase (or anywhere on the device, for that matter). You can take a look at \u003ca\n\n\t\n\t\n\t\thref = \"https://owasp.org/www-project-mobile-security/\"\n\n\t\t\n\n\t\n\n\t\n\n\t\ttarget = \"_blank\"\n\t\trel = \"nofollow noopener noreferrer\"\n\n\t\t\u003e\n\t\n\t\u003cspan\u003e\n\t\tOWASP Mobile Security Project\n\t\u003c/span\u003e\n\n\u003c/a\u003e for more information about mobile security.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eUseful Tools: \u003ca\n\n\t\n\t\n\t\thref = \"https://owasp.org/www-project-mobile-security/\"\n\n\t\t\n\n\t\n\n\t\n\n\t\ttarget = \"_blank\"\n\t\trel = \"nofollow noopener noreferrer\"\n\n\t\t\u003e\n\t\n\t\u003cspan\u003e\n\t\tOWASP Mobile Security Project\n\t\u003c/span\u003e\n\n\u003c/a\u003e, \u003ca\n\n\t\n\t\n\t\thref = \"https://www.guardsquare.com/\"\n\n\t\t\n\n\t\n\n\t\n\n\t\ttarget = \"_blank\"\n\t\trel = \"nofollow noopener noreferrer\"\n\n\t\t\u003e\n\t\n\t\u003cspan\u003e\n\t\tGuardSquare\n\t\u003c/span\u003e\n\n\u003c/a\u003e, \u003ca\n\n\t\n\t\n\t\thref = \"https://developer.android.com/privacy-and-security/security-tips\"\n\n\t\t\n\n\t\n\n\t\n\n\t\ttarget = \"_blank\"\n\t\trel = \"nofollow noopener noreferrer\"\n\n\t\t\u003e\n\t\n\t\u003cspan\u003e\n\t\tAndroid Security Guidelines\n\t\u003c/span\u003e\n\n\u003c/a\u003e, \u003ca\n\n\t\n\t\n\t\thref = \"https://developer.apple.com/documentation/security\"\n\n\t\t\n\n\t\n\n\t\n\n\t\ttarget = \"_blank\"\n\t\trel = \"nofollow noopener noreferrer\"\n\n\t\t\u003e\n\t\n\t\u003cspan\u003e\n\t\tiOS Security Guidelines\n\t\u003c/span\u003e\n\n\u003c/a\u003e.\u003c/strong\u003e\u003c/p\u003e\n\u003ch2 id=\"6-app-death\"\u003e6. App Death\u003c/h2\u003e\n\u003cp\u003eProducts get discontinued all the time due to various reasons. It’s only reasonable to build an app keeping this in mind, so that if something of this sort happens, the app would be graceful in denying the product offerings once it has been discontinued.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003ch6 id=\"if-you-think-that-this-can-never-happen-to-your-product-because-its-super-cool--take-a-look-at-all-of-the-products-google-has-killedhttpsgcemeteryco-till-date\"\u003eIf you think that this can never happen to your product because it’s super cool — take a look at all of the products Google has \u003ca\n\n\t\n\t\n\t\thref = \"https://gcemetery.co/\"\n\n\t\t\n\n\t\n\n\t\n\n\t\ttarget = \"_blank\"\n\t\trel = \"nofollow noopener noreferrer\"\n\n\t\t\u003e\n\t\n\t\u003cspan\u003e\n\t\tkilled\n\t\u003c/span\u003e\n\n\u003c/a\u003e till date.\u003c/h6\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eThis is something I’ve never implemented myself, neither have I seen it in any of the apps that have been discontinued. But it would be good, to have some sort of error handling at the app side for API failures (with custom error codes) that would notify the user that the \u003cem\u003eshop is shut and will remain that way forever\u003c/em\u003e.\u003c/p\u003e\n\u003cp\u003eThe only necessity for this pre-emptive implementation is because as app developers, we don’t have the privilege that web developers do wherein they can make changes on the fly and the world would immediately start seeing the Bye, World! page instead of the product homepage (like \u003ca\n\n\t\n\t\n\t\thref = \"https://www.orkut.com/\"\n\n\t\t\n\n\t\n\n\t\n\n\t\ttarget = \"_blank\"\n\t\trel = \"nofollow noopener noreferrer\"\n\n\t\t\u003e\n\t\n\t\u003cspan\u003e\n\t\tthis\n\t\u003c/span\u003e\n\n\u003c/a\u003e or \u003ca\n\n\t\n\t\n\t\thref = \"https://allo.google.com/\"\n\n\t\t\n\n\t\n\n\t\n\n\t\ttarget = \"_blank\"\n\t\trel = \"nofollow noopener noreferrer\"\n\n\t\t\u003e\n\t\n\t\u003cspan\u003e\n\t\tthis\n\t\u003c/span\u003e\n\n\u003c/a\u003e).\u003c/p\u003e\n\u003cp\u003eOkay, that wraps up the important points to keep in mind while building great apps. What do you think about this list? Do you think I missed something? Reach out to have a quick chat about it.\u003c/p\u003e\n\u003chr\u003e\n\u003cp\u003e\u003cem\u003eCross posted on \u003ca\n\n\t\n\t\n\t\thref = \"https://www.gojek.io/blog/six-tips-to-build-great-mobile-apps\"\n\n\t\t\n\n\t\n\n\t\n\n\t\ttarget = \"_blank\"\n\t\trel = \"nofollow noopener noreferrer\"\n\n\t\t\u003e\n\t\n\t\u003cspan\u003e\n\t\tGojek Engineering\n\t\u003c/span\u003e\n\n\u003c/a\u003e\u003c/em\u003e\u003c/p\u003e\n","description":"","image":"/images/blogs/mobile_app_tips/cover.webp","permalink":"https://cyrilpillai.com/blogs/mobile_app_tips/","title":"Six Tips to Build Great Mobile Apps"},{"content":"\u003cp\u003eIf you’re reading this, you’re probably interested in building mobile apps. I am, too. I’ve worked on a variety of mobile apps, and have come to the realisation that there are a few things that you have to integrate in an app no matter what it does and which domain it caters to.\u003c/p\u003e\n\u003cp\u003eThis series post pens down some essentials you should consider integrating into every app you build. Here we go:\u003c/p\u003e\n\u003ch2 id=\"1-crash-reporting\"\u003e1. Crash Reporting\u003c/h2\u003e\n\u003cp align=\"center\"\u003e\n    \u003cimg src=\"/images/blogs/mobile_app_essentials/inevitable.webp\"\u003e\n\u003c/p\u003e\n\u003cp\u003eAnyone who develops software will confirm that bugs are indeed, inevitable.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003ch6 id=\"a-bug-free-software-is-a-myth\"\u003e\u003cem\u003e\u003cstrong\u003eA bug free software is a myth.\u003c/strong\u003e\u003c/em\u003e\u003c/h6\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eAs developers, we are in a never ending battle to eliminate bugs from the system. We may not realise it at the time, but the code we write and the decisions we make can have serious consequences (like \u003ca\n\n\t\n\t\n\t\thref = \"https://en.wikipedia.org/wiki/Year_2000_problem\"\n\n\t\t\n\n\t\n\n\t\n\n\t\ttarget = \"_blank\"\n\t\trel = \"nofollow noopener noreferrer\"\n\n\t\t\u003e\n\t\n\t\u003cspan\u003e\n\t\tY2K\n\t\u003c/span\u003e\n\n\u003c/a\u003e, \u003ca\n\n\t\n\t\n\t\thref = \"https://blog.cleancoder.com/uncle-bob/2019/05/18/737-Max-8.html\"\n\n\t\t\n\n\t\n\n\t\n\n\t\ttarget = \"_blank\"\n\t\trel = \"nofollow noopener noreferrer\"\n\n\t\t\u003e\n\t\n\t\u003cspan\u003e\n\t\tBoeing 737 Max 8\n\t\u003c/span\u003e\n\n\u003c/a\u003e, \u003ca\n\n\t\n\t\n\t\thref = \"https://en.wikipedia.org/wiki/Mars_Climate_Orbiter#Cause_of_failure\"\n\n\t\t\n\n\t\n\n\t\n\n\t\ttarget = \"_blank\"\n\t\trel = \"nofollow noopener noreferrer\"\n\n\t\t\u003e\n\t\n\t\u003cspan\u003e\n\t\tMetric Mishap\n\t\u003c/span\u003e\n\n\u003c/a\u003e in NASA’s Mars Orbiter, etc).\u003c/p\u003e\n\u003cp\u003eThus, we need to make sure that we have a robust infrastructure for finding the flaws in the software we build. At Gojek, we use \u003ca\n\n\t\n\t\n\t\thref = \"https://firebase.google.com/products/crashlytics/\"\n\n\t\t\n\n\t\n\n\t\n\n\t\ttarget = \"_blank\"\n\t\trel = \"nofollow noopener noreferrer\"\n\n\t\t\u003e\n\t\n\t\u003cspan\u003e\n\t\tFirebase Crashlytics\n\t\u003c/span\u003e\n\n\u003c/a\u003e which gives an extensive crash report with complete stack trace, number of crashes, device info, geographic info, etc.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eUseful Tools: \u003ca\n\n\t\n\t\n\t\thref = \"https://firebase.google.com/products/crashlytics/\"\n\n\t\t\n\n\t\n\n\t\n\n\t\ttarget = \"_blank\"\n\t\trel = \"nofollow noopener noreferrer\"\n\n\t\t\u003e\n\t\n\t\u003cspan\u003e\n\t\tFirebase Crashlytics\n\t\u003c/span\u003e\n\n\u003c/a\u003e, \u003ca\n\n\t\n\t\n\t\thref = \"https://www.instabug.com/\"\n\n\t\t\n\n\t\n\n\t\n\n\t\ttarget = \"_blank\"\n\t\trel = \"nofollow noopener noreferrer\"\n\n\t\t\u003e\n\t\n\t\u003cspan\u003e\n\t\tInstabug\n\t\u003c/span\u003e\n\n\u003c/a\u003e, \u003ca\n\n\t\n\t\n\t\thref = \"https://sentry.io/welcome/\"\n\n\t\t\n\n\t\n\n\t\n\n\t\ttarget = \"_blank\"\n\t\trel = \"nofollow noopener noreferrer\"\n\n\t\t\u003e\n\t\n\t\u003cspan\u003e\n\t\tSentry\n\t\u003c/span\u003e\n\n\u003c/a\u003e, \u003ca\n\n\t\n\t\n\t\thref = \"https://www.bugsnag.com/\"\n\n\t\t\n\n\t\n\n\t\n\n\t\ttarget = \"_blank\"\n\t\trel = \"nofollow noopener noreferrer\"\n\n\t\t\u003e\n\t\n\t\u003cspan\u003e\n\t\tBugSnag\n\t\u003c/span\u003e\n\n\u003c/a\u003e, etc.\u003c/strong\u003e\u003c/p\u003e\n\u003ch2 id=\"2-analytics\"\u003e2. Analytics\u003c/h2\u003e\n\u003cp\u003eWe build software to cater to users’ needs. Hence, the evolution of the product depends on the user. We may need to track a user’s behavioural data — screen time, button clicks, navigation patterns, etc. — to understand the user better. This data can then be used to tweak the product by enhancing the UI/UX, resulting in a richer experience.\u003c/p\u003e\n\u003cp\u003eApart from user interaction data, logging non-fatal errors and API failures can be extremely helpful in enhancing the app experience too.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003ch6 id=\"logging-events-is-just-a-piece-of-the-puzzle-though\"\u003eLogging events is just a piece of the puzzle though.\u003c/h6\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eMonitoring the events and using the data to improve user experience is more important. For example, monitoring the number of users on a particular version of the app can help decide whether a specific feature can be deprecated or not.\u003c/p\u003e\n\u003cp\u003eAt Gojek, we use \u003ca\n\n\t\n\t\n\t\thref = \"https://clevertap.com/\"\n\n\t\t\n\n\t\n\n\t\n\n\t\ttarget = \"_blank\"\n\t\trel = \"nofollow noopener noreferrer\"\n\n\t\t\u003e\n\t\n\t\u003cspan\u003e\n\t\tCleverTap\n\t\u003c/span\u003e\n\n\u003c/a\u003e \u0026amp; \u003ca\n\n\t\n\t\n\t\thref = \"https://www.appsflyer.com/\"\n\n\t\t\n\n\t\n\n\t\n\n\t\ttarget = \"_blank\"\n\t\trel = \"nofollow noopener noreferrer\"\n\n\t\t\u003e\n\t\n\t\u003cspan\u003e\n\t\tAppsFlyer\n\t\u003c/span\u003e\n\n\u003c/a\u003e to capture user events. We use many tools for analysis as well.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eUseful Tools: \u003ca\n\n\t\n\t\n\t\thref = \"https://firebase.google.com/docs/analytics\"\n\n\t\t\n\n\t\n\n\t\n\n\t\ttarget = \"_blank\"\n\t\trel = \"nofollow noopener noreferrer\"\n\n\t\t\u003e\n\t\n\t\u003cspan\u003e\n\t\tGoogle Analytics\n\t\u003c/span\u003e\n\n\u003c/a\u003e, \u003ca\n\n\t\n\t\n\t\thref = \"https://clevertap.com/\"\n\n\t\t\n\n\t\n\n\t\n\n\t\ttarget = \"_blank\"\n\t\trel = \"nofollow noopener noreferrer\"\n\n\t\t\u003e\n\t\n\t\u003cspan\u003e\n\t\tCleverTap\n\t\u003c/span\u003e\n\n\u003c/a\u003e, \u003ca\n\n\t\n\t\n\t\thref = \"https://www.appsflyer.com/\"\n\n\t\t\n\n\t\n\n\t\n\n\t\ttarget = \"_blank\"\n\t\trel = \"nofollow noopener noreferrer\"\n\n\t\t\u003e\n\t\n\t\u003cspan\u003e\n\t\tAppsFlyer\n\t\u003c/span\u003e\n\n\u003c/a\u003e, \u003ca\n\n\t\n\t\n\t\thref = \"https://mixpanel.com/\"\n\n\t\t\n\n\t\n\n\t\n\n\t\ttarget = \"_blank\"\n\t\trel = \"nofollow noopener noreferrer\"\n\n\t\t\u003e\n\t\n\t\u003cspan\u003e\n\t\tMixPanel\n\t\u003c/span\u003e\n\n\u003c/a\u003e, \u003ca\n\n\t\n\t\n\t\thref = \"https://amplitude.com/\"\n\n\t\t\n\n\t\n\n\t\n\n\t\ttarget = \"_blank\"\n\t\trel = \"nofollow noopener noreferrer\"\n\n\t\t\u003e\n\t\n\t\u003cspan\u003e\n\t\tAmplitude\n\t\u003c/span\u003e\n\n\u003c/a\u003e, \u003ca\n\n\t\n\t\n\t\thref = \"https://segment.com/\"\n\n\t\t\n\n\t\n\n\t\n\n\t\ttarget = \"_blank\"\n\t\trel = \"nofollow noopener noreferrer\"\n\n\t\t\u003e\n\t\n\t\u003cspan\u003e\n\t\tSegment\n\t\u003c/span\u003e\n\n\u003c/a\u003e, \u003ca\n\n\t\n\t\n\t\thref = \"https://www.metabase.com/\"\n\n\t\t\n\n\t\n\n\t\n\n\t\ttarget = \"_blank\"\n\t\trel = \"nofollow noopener noreferrer\"\n\n\t\t\u003e\n\t\n\t\u003cspan\u003e\n\t\tMetabase\n\t\u003c/span\u003e\n\n\u003c/a\u003e, etc.\u003c/strong\u003e\u003c/p\u003e\n\u003ch2 id=\"3-feature-toggle\"\u003e3. Feature Toggle\u003c/h2\u003e\n\u003cp\u003e\u003cem\u003e\u003cstrong\u003ePicture this\u003c/strong\u003e\u003c/em\u003e\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e→ You introduce a new feature in your app.\n→ Your app’s crash free sessions reduce drastically after a few\ndays of releasing it to App Store.\n→ You debug and figure out that the new feature has an issue.\n→ Now, you have to fix the issue as quickly as possible and release\nanother update to App Store — which will take its own sweet time to\nreview it (Problems of being a mobile dev 😞).\n→ In the time it took for you to fix the issue and for the App Store\nto release the new update, the damage was already done.\n\u003c/code\u003e\u003c/pre\u003e\u003ch3 id=\"a-few-examples-of-the-damage\"\u003eA few examples of the damage\u003c/h3\u003e\n\u003cp\u003eCrash free sessions went down, App Store ratings sunk 📉, App reviews section got filled with complaints, Uninstalls increased, Users started bombarding the customer care unit, Product got defamed on social media, Management folks got upset 💢\u003c/p\u003e\n\u003cblockquote\u003e\n\u003ch6 id=\"what-can-we-do-for-damage-control\"\u003eWhat can we do for Damage Control?\u003c/h6\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eWell, we can avoid all this with \u003ca\n\n\t\n\t\n\t\thref = \"https://en.wikipedia.org/wiki/Feature_toggle\"\n\n\t\t\n\n\t\n\n\t\n\n\t\ttarget = \"_blank\"\n\t\trel = \"nofollow noopener noreferrer\"\n\n\t\t\u003e\n\t\n\t\u003cspan\u003e\n\t\tfeature toggles/feature flags\n\t\u003c/span\u003e\n\n\u003c/a\u003e. At Gojek, we don’t release a new feature without a feature toggle. This ensures we can toggle it off immediately if things go south (\u003ca\n\n\t\n\t\n\t\thref = \"https://en.wikipedia.org/wiki/Murphy%27s_law\"\n\n\t\t\n\n\t\n\n\t\n\n\t\ttarget = \"_blank\"\n\t\trel = \"nofollow noopener noreferrer\"\n\n\t\t\u003e\n\t\n\t\u003cspan\u003e\n\t\tMurphy’s Law\n\t\u003c/span\u003e\n\n\u003c/a\u003e exists for a reason 😑). We’ve been using \u003ca\n\n\t\n\t\n\t\thref = \"https://firebase.google.com/docs/remote-config\"\n\n\t\t\n\n\t\n\n\t\n\n\t\ttarget = \"_blank\"\n\t\trel = \"nofollow noopener noreferrer\"\n\n\t\t\u003e\n\t\n\t\u003cspan\u003e\n\t\tFirebase Remote Config\n\t\u003c/span\u003e\n\n\u003c/a\u003e for implementing feature toggles, which suffices for basic use cases, but we’re moving away from it to an in-house tool called \u003ca\n\n\t\n\t\n\t\thref = \"https://medium.com/gojekengineering/introducing-litmus-gojeks-own-experimentation-platform-3803467b6a53\"\n\n\t\t\n\n\t\n\n\t\n\n\t\ttarget = \"_blank\"\n\t\trel = \"nofollow noopener noreferrer\"\n\n\t\t\u003e\n\t\n\t\u003cspan\u003e\n\t\tLitmus\n\t\u003c/span\u003e\n\n\u003c/a\u003e which is built to cater to our specific needs and gives more granular control over feature rollouts. You can read more about Litmus here:\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eMore Useful Tools: \u003ca\n\n\t\n\t\n\t\thref = \"https://firebase.google.com/docs/remote-config\"\n\n\t\t\n\n\t\n\n\t\n\n\t\ttarget = \"_blank\"\n\t\trel = \"nofollow noopener noreferrer\"\n\n\t\t\u003e\n\t\n\t\u003cspan\u003e\n\t\tFirebase Remote Config\n\t\u003c/span\u003e\n\n\u003c/a\u003e, \u003ca\n\n\t\n\t\n\t\thref = \"https://www.split.io/\"\n\n\t\t\n\n\t\n\n\t\n\n\t\ttarget = \"_blank\"\n\t\trel = \"nofollow noopener noreferrer\"\n\n\t\t\u003e\n\t\n\t\u003cspan\u003e\n\t\tSplit\n\t\u003c/span\u003e\n\n\u003c/a\u003e, \u003ca\n\n\t\n\t\n\t\thref = \"https://www.cloudbees.com/capabilities/feature-management\"\n\n\t\t\n\n\t\n\n\t\n\n\t\ttarget = \"_blank\"\n\t\trel = \"nofollow noopener noreferrer\"\n\n\t\t\u003e\n\t\n\t\u003cspan\u003e\n\t\tRollout\n\t\u003c/span\u003e\n\n\u003c/a\u003e, etc.\u003c/strong\u003e\u003c/p\u003e\n\u003ch2 id=\"4-globalisation\"\u003e4. Globalisation\u003c/h2\u003e\n\u003cp\u003eLike other products, software shouldn’t be built with a small target audience in mind. It should have the ability to scale up and cater to a wide variety of users across the globe.\u003c/p\u003e\n\u003cp\u003eGlobalisation has two phases: \u003ca\n\n\t\n\t\n\t\thref = \"https://en.wikipedia.org/wiki/Internationalization_and_localization\"\n\n\t\t\n\n\t\n\n\t\n\n\t\ttarget = \"_blank\"\n\t\trel = \"nofollow noopener noreferrer\"\n\n\t\t\u003e\n\t\n\t\u003cspan\u003e\n\t\tinternationalisation \u0026amp; localisation\n\t\u003c/span\u003e\n\n\u003c/a\u003e.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eInternationalisation (i18n) refers to the initial setup of the software in a way that it can adapt to various languages and regions. It is a one-time process.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eLocalisation (l10n) refers to the actual implementation efforts to support a particular language/region.\u003c/p\u003e\n\u003cp\u003eAs Gojek is available in multiple countries (Indonesia, Singapore, \u003ca\n\n\t\n\t\n\t\thref = \"https://medium.com/gojekengineering/good-morning-vietnam-how-gojek-went-international-c7c302cc8caa\"\n\n\t\t\n\n\t\n\n\t\n\n\t\ttarget = \"_blank\"\n\t\trel = \"nofollow noopener noreferrer\"\n\n\t\t\u003e\n\t\n\t\u003cspan\u003e\n\t\tVietnam\n\t\u003c/span\u003e\n\n\u003c/a\u003e, and \u003ca\n\n\t\n\t\n\t\thref = \"https://medium.com/gojekengineering/the-final-chapter-how-gojek-went-international-7839ebc48db5\"\n\n\t\t\n\n\t\n\n\t\n\n\t\ttarget = \"_blank\"\n\t\trel = \"nofollow noopener noreferrer\"\n\n\t\t\u003e\n\t\n\t\u003cspan\u003e\n\t\tThailand\n\t\u003c/span\u003e\n\n\u003c/a\u003e, we need to make sure that all of our users get a familiar and localised experience based on their geographic location and language preferences. Our mobile apps have localised copies and illustrations and our APIs return data based on the user’s locale.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eUseful Tools: \u003ca\n\n\t\n\t\n\t\thref = \"https://www.oneskyapp.com/\"\n\n\t\t\n\n\t\n\n\t\n\n\t\ttarget = \"_blank\"\n\t\trel = \"nofollow noopener noreferrer\"\n\n\t\t\u003e\n\t\n\t\u003cspan\u003e\n\t\tOneSky\n\t\u003c/span\u003e\n\n\u003c/a\u003e, \u003ca\n\n\t\n\t\n\t\thref = \"https://lokalise.com/\"\n\n\t\t\n\n\t\n\n\t\n\n\t\ttarget = \"_blank\"\n\t\trel = \"nofollow noopener noreferrer\"\n\n\t\t\u003e\n\t\n\t\u003cspan\u003e\n\t\tLokalise\n\t\u003c/span\u003e\n\n\u003c/a\u003e, etc.\u003c/strong\u003e\u003c/p\u003e\n\u003ch2 id=\"5-force-update\"\u003e5. Force Update\u003c/h2\u003e\n\u003cp align=\"center\"\u003e\n    \u003cimg src=\"/images/blogs/mobile_app_essentials/not_today.webp\"\u003e\n\u003c/p\u003e\n\u003cp\u003eAny non-trivial app will evolve throughout its lifecycle — changing with every iteration. App updates are the most crucial part of this evolution.\u003c/p\u003e\n\u003cp\u003eUpdates are released for a multitude of reasons:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003ch6 id=\"first-release-new-feature-design-overhaul-bug-fixes-enhancements-its-a-long-list\"\u003eFirst release, new feature, design overhaul, bug fixes, enhancements, it’s a long list.\u003c/h6\u003e\n\u003c/blockquote\u003e\n\u003cp align=\"center\"\u003e\n    \u003cimg src=\"/images/blogs/mobile_app_essentials/update.webp\"\u003e\n\u003c/p\u003e\n\u003cp\u003eThe problem with App updates is that the user can opt out and continue using the older versions of the app, which means:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003ch6 id=\"no-breaking-changes-ever-backward-compatibility-for-every-version-of-the-app-users-missing-out-on-new-features-hindrance-in-adoption-of-crucial-bug-fixes-its-another-long-list\"\u003eNo breaking changes ever, backward compatibility for every version of the app, users missing out on new features, hindrance in adoption of crucial bug fixes… it’s another long list.\u003c/h6\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e\u003cstrong\u003eForce Update\u003c/strong\u003e is a mechanism to enforce timely updates by restricting app usage. One important point to keep in mind is to use this sparingly, as it’s blocking the user from using the app, and might increase the churn rate.\u003c/p\u003e\n\u003cp\u003eForce Update should be integrated in the app from the get-go. Its implementation is pretty straightforward and there are various ways to do it.\u003c/p\u003e\n\u003cp\u003eYou could use \u003ca\n\n\t\n\t\n\t\thref = \"https://firebase.google.com/docs/remote-config\"\n\n\t\t\n\n\t\n\n\t\n\n\t\ttarget = \"_blank\"\n\t\trel = \"nofollow noopener noreferrer\"\n\n\t\t\u003e\n\t\n\t\u003cspan\u003e\n\t\tFirebase Remote Config\n\t\u003c/span\u003e\n\n\u003c/a\u003e to get the version identifiers of the latest version and do a comparison with the installed one.\u003c/p\u003e\n\u003cp\u003eAnother approach would be to make an API call to a Backend service with the current version identifiers and act upon the response from the service.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eUseful Tools: \u003ca\n\n\t\n\t\n\t\thref = \"https://developer.android.com/guide/playcore/in-app-updates\"\n\n\t\t\n\n\t\n\n\t\n\n\t\ttarget = \"_blank\"\n\t\trel = \"nofollow noopener noreferrer\"\n\n\t\t\u003e\n\t\n\t\u003cspan\u003e\n\t\tGoogle’s In-app Updates\n\t\u003c/span\u003e\n\n\u003c/a\u003e.\u003c/strong\u003e\u003c/p\u003e\n\u003ch2 id=\"6-design-language\"\u003e6. Design Language\u003c/h2\u003e\n\u003cblockquote\u003e\n\u003ch6 id=\"looks-arent-everything\"\u003eLooks aren’t everything.\u003c/h6\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eThis is true in most cases, but not when it comes to mobile apps. In our world, user interface/user experience is everything. You should have a consistent user experience throughout the app to make sure the user gets familiar with the app as quickly as possible. It helps to follow some kind of Design Language while building mobile apps. Having a set of components and similar theming also helps in reusing a lot of code while building the app.\u003c/p\u003e\n\u003cp\u003eGojek has its own Design Language called \u003ca\n\n\t\n\t\n\t\thref = \"https://asphalt.gojek.io/\"\n\n\t\t\n\n\t\n\n\t\n\n\t\ttarget = \"_blank\"\n\t\trel = \"nofollow noopener noreferrer\"\n\n\t\t\u003e\n\t\n\t\u003cspan\u003e\n\t\tAsphalt\n\t\u003c/span\u003e\n\n\u003c/a\u003e. If you want to know more about how we ended up building it, check out \u003ca\n\n\t\n\t\n\t\thref = \"https://medium.com/gojekengineering/of-dreams-deadlines-and-a-design-system-6ad7c3d1b17f\"\n\n\t\t\n\n\t\n\n\t\n\n\t\ttarget = \"_blank\"\n\t\trel = \"nofollow noopener noreferrer\"\n\n\t\t\u003e\n\t\n\t\u003cspan\u003e\n\t\tthis\n\t\u003c/span\u003e\n\n\u003c/a\u003e blog. Also, did you notice Gojek has a new design style? Read about it \u003ca\n\n\t\n\t\n\t\thref = \"https://medium.com/gojekengineering/a-new-gojek-4100c27875ff\"\n\n\t\t\n\n\t\n\n\t\n\n\t\ttarget = \"_blank\"\n\t\trel = \"nofollow noopener noreferrer\"\n\n\t\t\u003e\n\t\n\t\u003cspan\u003e\n\t\there\n\t\u003c/span\u003e\n\n\u003c/a\u003e.)\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eUseful Tools: \u003ca\n\n\t\n\t\n\t\thref = \"https://m3.material.io/\"\n\n\t\t\n\n\t\n\n\t\n\n\t\ttarget = \"_blank\"\n\t\trel = \"nofollow noopener noreferrer\"\n\n\t\t\u003e\n\t\n\t\u003cspan\u003e\n\t\tMaterial Design\n\t\u003c/span\u003e\n\n\u003c/a\u003e, \u003ca\n\n\t\n\t\n\t\thref = \"https://en.wikipedia.org/wiki/Flat_design\"\n\n\t\t\n\n\t\n\n\t\n\n\t\ttarget = \"_blank\"\n\t\trel = \"nofollow noopener noreferrer\"\n\n\t\t\u003e\n\t\n\t\u003cspan\u003e\n\t\tFlat Design\n\t\u003c/span\u003e\n\n\u003c/a\u003e, \u003ca\n\n\t\n\t\n\t\thref = \"https://asphalt.gojek.io/\"\n\n\t\t\n\n\t\n\n\t\n\n\t\ttarget = \"_blank\"\n\t\trel = \"nofollow noopener noreferrer\"\n\n\t\t\u003e\n\t\n\t\u003cspan\u003e\n\t\tAsphalt\n\t\u003c/span\u003e\n\n\u003c/a\u003e, etc.\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eThat’s all from me for now, folks. But there’s a lot more to talk about on this subject —  keep watching this space for more.\u003c/p\u003e\n\u003chr\u003e\n\u003cp\u003e\u003cem\u003eCross posted on \u003ca\n\n\t\n\t\n\t\thref = \"https://www.gojek.io/blog/are-you-building-your-app-right\"\n\n\t\t\n\n\t\n\n\t\n\n\t\ttarget = \"_blank\"\n\t\trel = \"nofollow noopener noreferrer\"\n\n\t\t\u003e\n\t\n\t\u003cspan\u003e\n\t\tGojek Engineering\n\t\u003c/span\u003e\n\n\u003c/a\u003e\u003c/em\u003e\u003c/p\u003e\n","description":"","image":"/images/blogs/mobile_app_essentials/cover.webp","permalink":"https://cyrilpillai.com/blogs/mobile_app_essentials/","title":"Are You Building Your App Right?"},{"content":"\u003cp\u003eI recently joined GOJEK as a Product Engineer as part of the GO-LOGISTICS team. I’ve been doing Android Development for over four years, but when I first ‘git pulled’ \u003cstrong\u003eGoHost\u003c/strong\u003e (the monorepo for the Android consumer app), I was intimidated by the codebase. I have worked with codebases that had four to five contributors, but this was a different beast altogether.\u003c/p\u003e\n\u003cp\u003e80+ modules, 20+ active contributors, ~20 mins for a clean build, and different coding styles/architectures in different modules. Product modules are owned by the respective teams and thus they have the liberty to choose what works best for them.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eOn an unrelated note, codebases are the stuff of folklore at GOJEK. When we launched our app in 2015, all our backend services depended on a legacy codebase named after a South Park character, Stan Marsh. As GOJEK grew, Stan Marsh buckled under the strain. We eventually pulled all its functionality into discrete microservices. Nevertheless, the legacy of Stan Marsh lives on.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eI was lucky enough to have access to some of the developers who oversaw the transition from Stan Marsh, and gained a lot of insights. This post pens down my learnings from the last few months on how to deal with huge codebases.\u003c/p\u003e\n\u003ch2 id=\"you-cant-understand-everything\"\u003eYou can’t understand everything\u003c/h2\u003e\n\u003cp align=\"center\"\u003e\n    \u003cimg src=\"/images/blogs/huge_codebases/know_nothing.webp\"\u003e\n\u003c/p\u003e\n\u003cblockquote\u003e\n\u003ch5 id=\"this-is-the-hardest-thing-of-all\"\u003eThis is the hardest thing of all.\u003c/h5\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eAll of the previous codebases I’ve worked on/owned had one thing in common — I knew everything, about everything. The legacy ones I inherited took some time and effort but eventually I used to get well-versed with the entire system.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eI tried that approach here and failed miserably\u003c/strong\u003e. Initially, I was responsible for a single module (GO-SEND product) out of the 80+ modules. These modules included other products (GO-RIDE, GO-FOOD, GO-TIX etc.), libraries/utilities, SDKs for the products, and product agnostic core/platform code.\u003c/p\u003e\n\u003cp\u003eAfter a few days of diving in the ocean of code and sinking every time, I got frustrated and talked to my Mobile Lead about this.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003ch5 id=\"talking-to-him-made-me-realise-that-no-one-in-the-entire-org-knows-everything-about-the-system\"\u003eTalking to him made me realise that no one in the entire org knows everything about the system.\u003c/h5\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eThe key takeaway here is to understand the parts you own or would work on, and be oblivious to other moving parts. Changes are being made to the codebase on an hourly basis, and it’s humanly impossible to keep track of everything.\u003c/p\u003e\n\u003ch2 id=\"get-familiar-with-the-architecture-of-the-codebase\"\u003eGet familiar with the architecture of the codebase\u003c/h2\u003e\n\u003cp\u003eNow, when I say be \u003cem\u003e\u003cstrong\u003eoblivious\u003c/strong\u003e\u003c/em\u003e, I don’t mean everything. It’s a mandatory process to dive into the ocean and sink, but you need to know when to stop. Try to familiarise yourself with the skeleton of the codebase. \u003cstrong\u003eRead code from modules that make up the core of the system (platform code that is independent of the products), and understand how your module interacts with that code\u003c/strong\u003e. Dig into SDKs and internal libraries that abstract certain third party dependencies, so that the product modules aren’t affected by future changes.\u003c/p\u003e\n\u003ch2 id=\"have-a-specific-goal-in-mind-before-you-dive\"\u003eHave a specific goal in mind before you dive\u003c/h2\u003e\n\u003cp\u003eIt’s important to have a reason to dive into the ocean, and to have a well-defined task to finish and get out (because time ticks 🕒). If you don’t have any task, ask your team members to assign you something. It’s better to get up from the chair feeling good about completing something. Definitely beats getting lost in the gigantic world of programming constructs.\u003c/p\u003e\n\u003ch2 id=\"read-code-thoroughly-dont-break-anything\"\u003eRead code thoroughly, don’t break anything\u003c/h2\u003e\n\u003cp\u003eLet’s acknowledge that we developers can be a bit narcissistic about code. We love writing code but reading it bores us to death. Even if we trick our minds into reading someone else’s code, there is usually an urge to rewrite it. The best thing to do here is to be objective and follow one of GOJEK’s \u003ca\n\n\t\n\t\n\t\thref = \"https://medium.com/gojekengineering/go-jek-engineering-guiding-principles-101-9a7bd499ffa2\"\n\n\t\t\n\n\t\n\n\t\n\n\t\ttarget = \"_blank\"\n\t\trel = \"nofollow noopener noreferrer\"\n\n\t\t\u003e\n\t\n\t\u003cspan\u003e\n\t\tguiding principles\n\t\u003c/span\u003e\n\n\u003c/a\u003e:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003ch5 id=\"every-decision-is-correct-at-the-time-it-is-made\"\u003e\u003cem\u003e\u003cstrong\u003e“Every decision is correct at the time it is made”\u003c/strong\u003e\u003c/em\u003e\u003c/h5\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eSpend ample time reading the code and critically evaluate the consequences your changes might have before proceeding.\u003c/p\u003e\n\u003ch2 id=\"follow-the-coding-style-of-the-file-you-are-editing\"\u003eFollow the coding style of the file you are editing\u003c/h2\u003e\n\u003cp\u003eThis is to ensure that your changes don’t look out of place, and are aligned with the surrounding environment. It’s super important to maintain consistency no matter how outdated something feels.\u003c/p\u003e\n\u003cp\u003eAssume you need to change the filtering condition in a file:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003ch5 id=\"what-this-class-is-still-using-rxjava-10-\"\u003eWhat!! This class is still using RxJava 1.0. 😱\u003c/h5\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e\u003cem\u003eOption 1\u003c/em\u003e\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e• I\u0026#39;ll just update the filter condition as per the new requirement.\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e\u003cem\u003eOption 2\u003c/em\u003e\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e• But, RxJava 2.0 has been around for such a long time.\n• Let me upgrade it to the latest version.\nafter 3 hours\n• I\u0026#39;ve modified a bunch of files and there\u0026#39;s still a lot more to refactor.\ngit reverts everything\n• GOTO Option 1.\n\u003c/code\u003e\u003c/pre\u003e\u003ch2 id=\"talk-to-other-devs\"\u003eTalk to other devs\u003c/h2\u003e\n\u003cblockquote\u003e\n\u003ch5 id=\"rockstar-developer--coding-ninja--10xer--one-man-army--everyone-is-inferior-to-me--i-like-working-alone--others-are-stupid\"\u003eRockstar developer / coding ninja / 10Xer / one man army / everyone is inferior to me / I like working alone / others are stupid.\u003c/h5\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eIf you relate to anyone of the above things, you need to change. Can you build systems single handedly? Yes. But to make scalable solutions and improve yourself, \u003cstrong\u003eit’s important to throw your ego out of the window\u003c/strong\u003e. Be liberal and collaborate with others.\u003c/p\u003e\n\u003cp\u003eCoincidentally, this also helps in dealing with huge codebases. Talk to other developers who have worked on the piece of code you’re concerned with. To get more context, ask about the rationale behind the decisions made and the implications new changes would have. Be open to suggestions on the way you should approach the problem.\u003c/p\u003e\n\u003ch2 id=\"improve-it\"\u003eImprove it\u003c/h2\u003e\n\u003cp\u003e— Make the codebase a bit stronger than it previously was by making sure that changes you make are supported by tests.\u003c/p\u003e\n\u003cp\u003e— Refactor wherever \u003cem\u003e\u003cstrong\u003eNECESSARY\u003c/strong\u003e\u003c/em\u003e.\u003c/p\u003e\n\u003cp\u003e— Document decisions/assumptions/hacks to make sure the information is present somewhere (apart from the head of an engineer).\u003c/p\u003e\n\u003chr\u003e\n\u003cp\u003e\u003cem\u003eCross posted on \u003ca\n\n\t\n\t\n\t\thref = \"https://www.gojek.io/blog/a-guide-to-tackling-huge-codebases\"\n\n\t\t\n\n\t\n\n\t\n\n\t\ttarget = \"_blank\"\n\t\trel = \"nofollow noopener noreferrer\"\n\n\t\t\u003e\n\t\n\t\u003cspan\u003e\n\t\tGojek Engineering\n\t\u003c/span\u003e\n\n\u003c/a\u003e\u003c/em\u003e\u003c/p\u003e\n","description":"","image":"/images/blogs/huge_codebases/cover.webp","permalink":"https://cyrilpillai.com/blogs/huge_codebases/","title":"A Guide to Tackling Huge Codebases"},{"content":"\u003ch2 id=\"error-format\"\u003eError Format\u003c/h2\u003e\n\u003cp\u003eMost of the APIs have a defined format in which they return errors. This contract helps the API consumers in handling the errors.\u003c/p\u003e\n\u003cp\u003eAt m.Paani, we too have a contract for raising errors. The API sends a JSON list containing N error objects. A typical error response would look something like\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-json\" data-lang=\"json\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e[\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#f92672\"\u003e\u0026#34;field\u0026#34;\u003c/span\u003e: \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;non_field_errors\u0026#34;\u003c/span\u003e,\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#f92672\"\u003e\u0026#34;code\u0026#34;\u003c/span\u003e: \u003cspan style=\"color:#ae81ff\"\u003e4005\u003c/span\u003e,\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#f92672\"\u003e\u0026#34;client_message\u0026#34;\u003c/span\u003e: \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Please try logging in again.\u0026#34;\u003c/span\u003e,\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#f92672\"\u003e\u0026#34;server_message\u0026#34;\u003c/span\u003e: \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Token Expired at 2018-07-11T10:30:00Z\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    }\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e]\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cstrong\u003efield\u003c/strong\u003e: Contains name of the field only if it’s a field error else returns non_field_errors\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003ecode\u003c/strong\u003e: Internal Error Codes (as most non trivial systems have a lot of domain specific errors and edge cases). This also provides granularity and makes debugging a bit easier.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eConsider this - API returns an HTTP 401 UNAUTHORIZED, it’s impossible to identify the actual cause. This could have been raised because token was invalid or expired or perhaps it wasn’t sent in the first place.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e\u003cstrong\u003eclient_message\u003c/strong\u003e: A user friendly message that can be directly shown to the user.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eserver_message\u003c/strong\u003e: A message containing more technical information that can help in debugging the issue.\u003c/p\u003e\n\u003chr\u003e\n\u003ch2 id=\"handling-the-error\"\u003eHandling the error\u003c/h2\u003e\n\u003cp\u003eNow that we know the format of error we’re dealing with, let’s dive into handling it at the Android side.\u003c/p\u003e\n\u003cp\u003eHere’s the data class which would be used to deserialize the error body.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-kotlin\" data-lang=\"kotlin\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003edata\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003eclass\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eNetworkError\u003c/span\u003e(\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#a6e22e\"\u003e@SerializedName\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;code\u0026#34;\u003c/span\u003e) \u003cspan style=\"color:#66d9ef\"\u003eval\u003c/span\u003e code: Int,\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#a6e22e\"\u003e@SerializedName\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;field\u0026#34;\u003c/span\u003e) \u003cspan style=\"color:#66d9ef\"\u003eval\u003c/span\u003e field: String,\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#a6e22e\"\u003e@SerializedName\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;server_message\u0026#34;\u003c/span\u003e) \u003cspan style=\"color:#66d9ef\"\u003eval\u003c/span\u003e serverMessage: String,\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#a6e22e\"\u003e@SerializedName\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;client_message\u0026#34;\u003c/span\u003e) \u003cspan style=\"color:#66d9ef\"\u003eval\u003c/span\u003e clientMessage: String\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eHere’s an example exception which would be raised once a corresponding JSON error is encountered.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-kotlin\" data-lang=\"kotlin\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003edata\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003eclass\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eAuthTokenException\u003c/span\u003e(\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003eval\u003c/span\u003e reason: String = \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Authentication Token is invalid\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e): Throwable(message = reason)\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eThis is how you would be handling errors in your API calls.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-kotlin\" data-lang=\"kotlin\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ewebService.getUserDetails()\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e.handleErrors(gson) {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#75715e\"\u003e//Handle API-specific errors\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e    \u003cspan style=\"color:#66d9ef\"\u003eval\u003c/span\u003e list = mutableListOf\u0026lt;Throwable\u0026gt;()\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003eit\u003c/span\u003e.forEach {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#66d9ef\"\u003ewhen\u003c/span\u003e (\u003cspan style=\"color:#66d9ef\"\u003eit\u003c/span\u003e.code) {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            \u003cspan style=\"color:#ae81ff\"\u003e2081\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e-\u0026gt;\u003c/span\u003e list.add(UserDeactivatedException(\u003cspan style=\"color:#66d9ef\"\u003eit\u003c/span\u003e.clientMessage))\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        }\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    }\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003ereturn\u003c/span\u003e\u003cspan style=\"color:#a6e22e\"\u003e@handleErrors\u003c/span\u003e list\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e.subscribe({\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#75715e\"\u003e//You can finally go to bed now\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e    \u003cspan style=\"color:#a6e22e\"\u003eLog\u003c/span\u003e.d(TAG, \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;success: \u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e$it\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e}, {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#75715e\"\u003e//Get some more coffee and handle this error\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e    \u003cspan style=\"color:#66d9ef\"\u003eit\u003c/span\u003e.printStackTrace()\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e})\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp align=\"center\"\u003e\n    \u003cimg src=\"/images/blogs/expecting_exceptions/confusion.webp\"\u003e\n\u003c/p\u003e\n\u003ch2 id=\"where-magic\"\u003eWhere magic\u003c/h2\u003e\n\u003cp\u003eLet’s get to the interesting part, shall we?\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-kotlin\" data-lang=\"kotlin\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e/**\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e * Extension function for [Single] that adds error handling logic to handle Network Errors in the stream\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e * This extension function is sufficient for all Network Requests as all of the Retrofit APIs should\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e * return a [Single]. But it can be extended for Observable/Flowable etc., if need be.\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e *\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e * Loops through the whole list and adds all of the recognizable errors as exceptions\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e * and at the same time makes sure the unknown/API-specific errors are passed on to the\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e * [customErrors] lambda function for processing.\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e * The lambda function receives only the unhandled errors and not the whole list. This is a\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e * small optimization that makes sure [customErrors] does not have to loop through already handled\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e * errors.\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e *\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e * @param gson [Gson] instance to pass it to [parseError]\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e * @param customErrors Lambda function which receives a list of [NetworkError] and is expected to\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e * handle the API-specific errors and return a list of [Throwable]\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e * @return [Single] that invokes [Single.error] with a [CompositeException] containing exceptions\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e * based on all of the errors returned by the API (Returns the original exception if it\u0026#39;s not able\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e * to parse it).\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e */\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003einline\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003efun\u003c/span\u003e \u0026lt;\u003cspan style=\"color:#a6e22e\"\u003eT\u003c/span\u003e\u0026gt; \u003cspan style=\"color:#a6e22e\"\u003eSingle\u003c/span\u003e\u0026lt;T\u0026gt;.handleErrors(gson: Gson, \u003cspan style=\"color:#66d9ef\"\u003ecrossinline\u003c/span\u003e customErrors: (List\u0026lt;NetworkError\u0026gt;) \u003cspan style=\"color:#f92672\"\u003e-\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eList\u0026lt;Throwable\u0026gt; = { listOf() }): Single\u0026lt;T\u0026gt; = \u003cspan style=\"color:#66d9ef\"\u003ethis\u003c/span\u003e.onErrorResumeNext { e \u003cspan style=\"color:#f92672\"\u003e-\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003eval\u003c/span\u003e errors: MutableList\u0026lt;Throwable\u0026gt; = mutableListOf()\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003eif\u003c/span\u003e (e \u003cspan style=\"color:#66d9ef\"\u003eis\u003c/span\u003e HttpException) {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#66d9ef\"\u003ewhen\u003c/span\u003e (e.code()) {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            \u003cspan style=\"color:#66d9ef\"\u003ein\u003c/span\u003e \u003cspan style=\"color:#ae81ff\"\u003e400.\u003c/span\u003e.\u003cspan style=\"color:#ae81ff\"\u003e499\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e-\u0026gt;\u003c/span\u003e {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e                \u003cspan style=\"color:#66d9ef\"\u003eval\u003c/span\u003e errorList = e.response().errorBody().parseError(gson = gson)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e                \u003cspan style=\"color:#66d9ef\"\u003eval\u003c/span\u003e unhandledErrorList: MutableList\u0026lt;NetworkError\u0026gt; = mutableListOf()\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e                errorList.forEach {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e                    \u003cspan style=\"color:#66d9ef\"\u003ewhen\u003c/span\u003e (\u003cspan style=\"color:#66d9ef\"\u003eit\u003c/span\u003e.code) {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e                        \u003cspan style=\"color:#ae81ff\"\u003e4001\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e-\u0026gt;\u003c/span\u003e errors.add(AuthTokenException(\u003cspan style=\"color:#66d9ef\"\u003eit\u003c/span\u003e.clientMessage))\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e                        \u003cspan style=\"color:#ae81ff\"\u003e4004\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e-\u0026gt;\u003c/span\u003e errors.add(NotFoundException(\u003cspan style=\"color:#66d9ef\"\u003eit\u003c/span\u003e.clientMessage))\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e                        \u003cspan style=\"color:#ae81ff\"\u003e2001\u003c/span\u003e, \u003cspan style=\"color:#ae81ff\"\u003e2031\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e-\u0026gt;\u003c/span\u003e errors.add(EmptyFieldException(\u003cspan style=\"color:#66d9ef\"\u003eit\u003c/span\u003e.\u003cspan style=\"color:#66d9ef\"\u003efield\u003c/span\u003e))\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e                        \u003cspan style=\"color:#66d9ef\"\u003eelse\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e-\u0026gt;\u003c/span\u003e unhandledErrorList.add(\u003cspan style=\"color:#66d9ef\"\u003eit\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e                    }\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e                }\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e                errors.addAll(customErrors(unhandledErrorList))\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            }\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        }\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    }\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003eif\u003c/span\u003e (errors.isEmpty()) errors.add(e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003ereturn\u003c/span\u003e\u003cspan style=\"color:#a6e22e\"\u003e@onErrorResumeNext\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eSingle\u003c/span\u003e.error(CompositeException(errors))\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e/**\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e * Extension function for [ResponseBody] that converts the [ResponseBody.string] into\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e * [List] of [NetworkError]\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e * *Note: Returns empty list if gson fails to parse the [ResponseBody.string]\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e * @param gson [Gson] instance to deserialize error response\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e * @return [List] of [NetworkError]\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e */\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003efun\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eResponseBody\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e?.\u003c/span\u003eparseError(gson: Gson): List\u0026lt;NetworkError\u0026gt; = \u003cspan style=\"color:#66d9ef\"\u003etry\u003c/span\u003e {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    gson.fromJson\u0026lt;List\u0026lt;NetworkError\u0026gt;\u0026gt;(\u003cspan style=\"color:#66d9ef\"\u003ethis\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e?.\u003c/span\u003estring(), \u003cspan style=\"color:#66d9ef\"\u003eobject\u003c/span\u003e \u003cspan style=\"color:#960050;background-color:#1e0010\"\u003e:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            TypeToken\u0026lt;List\u0026lt;NetworkError\u0026gt;\u0026gt;() {}.type)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e} \u003cspan style=\"color:#66d9ef\"\u003ecatch\u003c/span\u003e (e: Exception) {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    listOf()\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cstrong\u003ehandleErrors()\u003c/strong\u003e is an \u003ca\n\n\t\n\t\n\t\thref = \"https://kotlinlang.org/docs/extensions.html\"\n\n\t\t\n\n\t\n\n\t\n\n\t\ttarget = \"_blank\"\n\t\trel = \"nofollow noopener noreferrer\"\n\n\t\t\u003e\n\t\n\t\u003cspan\u003e\n\t\textension function\n\t\u003c/span\u003e\n\n\u003c/a\u003e written in Kotlin that can be used on any \u003cstrong\u003eSingle\u003c/strong\u003e.\u003c/p\u003e\n\u003cp\u003eIt has a very straight forward responsibility\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eTo transform the error response into a list of NetworkError and map every item to the corresponding Exception and return a \u003ca\n\n\t\n\t\n\t\thref = \"http://reactivex.io/RxJava/3.x/javadoc/io/reactivex/rxjava3/exceptions/CompositeException.html\"\n\n\t\t\n\n\t\n\n\t\n\n\t\ttarget = \"_blank\"\n\t\trel = \"nofollow noopener noreferrer\"\n\n\t\t\u003e\n\t\n\t\u003cspan\u003e\n\t\tCompositeException\n\t\u003c/span\u003e\n\n\u003c/a\u003e.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eRxJava’s \u003cstrong\u003eonErrorResumeNext\u003c/strong\u003e is the backbone of this extension function.\u003c/p\u003e\n\u003cp\u003eIf you’ve never heard of this operator before, I would highly recommend reading a bit about it \u003ca\n\n\t\n\t\n\t\thref = \"http://reactivex.io/RxJava/javadoc/rx/Observable.html#onErrorResumeNext-rx.Observable-\"\n\n\t\t\n\n\t\n\n\t\n\n\t\ttarget = \"_blank\"\n\t\trel = \"nofollow noopener noreferrer\"\n\n\t\t\u003e\n\t\n\t\u003cspan\u003e\n\t\there\n\t\u003c/span\u003e\n\n\u003c/a\u003e, but just to summarize what it does\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eIt replaces the current stream with a new Observable as soon as an error is encountered.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eThe function is pretty self explanatory but a higher level breakdown would be\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eHijack the thrown exception.\u003c/li\u003e\n\u003cli\u003eContinue only if it’s an \u003cstrong\u003eHttpException\u003c/strong\u003e else just return a new \u003cstrong\u003eSingle.error()\u003c/strong\u003e with the encountered exception to make sure the subscriber’s \u003cstrong\u003eonError\u003c/strong\u003e is called.\u003c/li\u003e\n\u003cli\u003eNow if it is an \u003cstrong\u003eHttpException\u003c/strong\u003e, then convert the response body into a \u003cstrong\u003eList\u0026lt;NetworkError\u0026gt;\u003c/strong\u003e using another extension function called \u003cstrong\u003eparseError()\u003c/strong\u003e.\u003c/li\u003e\n\u003cli\u003eIterate over the list of errors and add their corresponding exceptions to the \u003cstrong\u003eerrorList\u003c/strong\u003e. This basically means handling all of the BASE errors like Not Found Exceptions, Auth Exceptions, Empty Field Exceptions, etc.\u003c/li\u003e\n\u003cli\u003eAdd all of the unknown errors into the \u003cstrong\u003eunhandledErrorList\u003c/strong\u003e and pass it to the lambda function received. Most of the APIs would have unique errors which cannot/should not be handled by this function. It should rather be delegated to the caller.\u003c/li\u003e\n\u003cli\u003eBased on the function contract, the lambda function would then process the unhandledErrorList and return a \u003cstrong\u003eList\u0026lt;Throwable\u0026gt;\u003c/strong\u003e containing all of the API specific exceptions.\u003c/li\u003e\n\u003cli\u003eAdd the new exceptions to the \u003cstrong\u003eerrorList\u003c/strong\u003e and return a new \u003cstrong\u003eSingle.error()\u003c/strong\u003e with the \u003cstrong\u003eCompositeException\u003c/strong\u003e containing all of the modified exceptions.\u003c/li\u003e\n\u003cli\u003eThe subscriber can then iterate over the \u003cstrong\u003e\u003ccode\u003eCompositeException\u003c/code\u003e\u003c/strong\u003e and act accordingly.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eWhat do you think about this approach. Feel free to share your thoughts.\u003c/p\u003e\n\u003chr\u003e\n\u003cp\u003e\u003cem\u003eCross posted in \u003ca\n\n\t\n\t\n\t\thref = \"https://medium.com/mpaani/expecting-the-exceptions-b6e6820160fc\"\n\n\t\t\n\n\t\n\n\t\n\n\t\ttarget = \"_blank\"\n\t\trel = \"nofollow noopener noreferrer\"\n\n\t\t\u003e\n\t\n\t\u003cspan\u003e\n\t\tmPaani Engineering\n\t\u003c/span\u003e\n\n\u003c/a\u003e\u003c/em\u003e\u003c/p\u003e\n","description":"","image":"/images/blogs/expecting_exceptions/cover.webp","permalink":"https://cyrilpillai.com/blogs/expecting_exceptions/","title":"Expecting the Exceptions"},{"content":"\u003cp\u003e\u003cem\u003eNote: This is not a guide explaining the format of the exam or how to crack it and become a Google certified Associate Android Developer. Its just me blabbering about my experience and the impact this certification has had on me. This is my first ever attempt at writing a blog. I hope you guys will go easy on me.\u003c/em\u003e\u003c/p\u003e\n\u003chr\u003e\n\u003ch2 id=\"lets-get-started\"\u003eLet’s get started\u003c/h2\u003e\n\u003cp\u003eI am a Google fanboy. I try to stay updated with the happenings in the Googley world, be it Android, Web, Cloud, VR, AR, ML, IoT, hot air balloons, modular phones, glasses and pretty much everything that is Google. I admired Google since college. I remember reading Google’s Wikipedia page for the first time and fantasizing about visiting \u003cstrong\u003eGoogleplex\u003c/strong\u003e at least once in my lifetime. Deep down, I knew it was a far fetched dream but \u003cem\u003e\u003cstrong\u003e“WHAT IF”\u003c/strong\u003e\u003c/em\u003e was a thought that I held on to for a very long time.\u003c/p\u003e\n\u003chr\u003e\n\u003ch2 id=\"background\"\u003eBackground\u003c/h2\u003e\n\u003cp\u003eI am an Android Developer at \u003cstrong\u003e\u003ca\n\n\t\n\t\n\t\thref = \"https://www.lovelocal.in/\"\n\n\t\t\n\n\t\n\n\t\n\n\t\ttarget = \"_blank\"\n\t\trel = \"nofollow noopener noreferrer\"\n\n\t\t\u003e\n\t\n\t\u003cspan\u003e\n\t\tm.Paani\n\t\u003c/span\u003e\n\n\u003c/a\u003e\u003c/strong\u003e. I started my \u003cem\u003e\u003cstrong\u003e“Developer journey”\u003c/strong\u003e\u003c/em\u003e in 2015, back when I was in college. I have a Bachelors in CS, but the curriculum that we had was pretty outdated and was no where near the current market requirements. We were taught C,C++ for more than a year. I had never heard of Functional Programming, Git, CI/CD, MVC, MVP or any of the other important \u0026amp; useful stuff as I was busy programming a 8085 microprocessor to add two numbers or demonstrating AND gate on a breadboard. Now, don’t get me wrong. I am not saying these have no importance at all and shouldn’t be taught. I do write functions to add two numbers and I use logical operators almost everyday. But introducing the students to the technologies that are currently used is a must have rather than a good to have. I realized that I had to learn things by myself. And that’s when I started learning Android Development, my familiarity with Java helped me a lot.\u003c/p\u003e\n\u003chr\u003e\n\u003ch2 id=\"google-developers-certification-program-was-announced\"\u003eGoogle Developers Certification Program was announced.\u003c/h2\u003e\n\u003cp\u003eI have been watching Google I/O livestream for more than 4 years now. Back in 2016, John Souchak announced the launch of the certification program. They weren’t taking candidates at that time, so I clicked the NOTIFY ME button on the website. I had already developed a handful of apps by that time and I was a bit sceptical if I would benefit from such a certification and if it would make any difference at all (spending $100 on an online certification was so not me). They notified me when the program started, but I didn’t register as I was contemplating taking the exam.\u003c/p\u003e\n\u003chr\u003e\n\u003ch2 id=\"new-year-transition\"\u003eNew Year Transition\u003c/h2\u003e\n\u003cp\u003eMy friend took the exam in September 2016. He had a rough experience as it took around 60 days for him to get the certification badge. This further cemented my decision of not taking the exam. But then I thought to myself\u003c/p\u003e\n\u003cblockquote\u003e\n\u003ch6 id=\"i-have-nothing-to-lose-this-exam-would-have-0-negative-effects-and-maybe-1-or-more-positive-ones\"\u003eI have nothing to lose. This exam would have 0 negative effects and maybe 1 or more positive ones.\u003c/h6\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eIt was New Year’s eve when I registered for the exam exactly at 6:00 PM IST. I looked at the documentation and the code and dived head first into it. I sat in one corner engrossed in the project. I transitioned from 2016 to 2017 while \u003cstrong\u003eCODING\u003c/strong\u003e 😎. I completed the project and submitted it for review on the 1st of Jan. I cleared the coding round as well as the exit interview and received my \u003ca\n\n\t\n\t\n\t\thref = \"https://www.credential.net/fed04716-dfd7-4cdd-a5c0-c715203f93c7?key=3e23ab0e9e7da3e91315148114610999255b3b234940d3e96e77f4d6c0402e8f\"\n\n\t\t\n\n\t\n\n\t\n\n\t\ttarget = \"_blank\"\n\t\trel = \"nofollow noopener noreferrer\"\n\n\t\t\u003e\n\t\n\t\u003cspan\u003e\n\t\tbadge\n\t\u003c/span\u003e\n\n\u003c/a\u003e within 2 weeks.\u003c/p\u003e\n\u003cp align=\"center\"\u003e\n    \u003cimg src=\"/images/blogs/aad_perks/mail/one.webp\"\u003e\n\u003c/p\u003e\n\u003chr\u003e\n\u003ch2 id=\"call-from-a-googler\"\u003eCall from a Googler\u003c/h2\u003e\n\u003cp\u003eSometime around mid of March ’17, I received a call from a guy named Akash Shukla who informed me that he works at Google India in their Bengaluru office and they were organizing a summit in Bengaluru for the first batch of the AAD alumni and I was among them. This was an all expenses paid trip and I was as happy as I could be because I was invited to this summit (I had never attended a Developer community event before) and more importantly I had a chat with a Googler. Akash also asked me for a date and time that I would be available on as they had planned a \u003cstrong\u003eSURPRISE\u003c/strong\u003e for me. I gave him a date and time and tried getting the secret from him but failed at it. He sent me a calendar invite with a link to Hangouts. I figured it would be a video chat with them and I was pretty excited about it.\u003c/p\u003e\n\u003chr\u003e\n\u003ch2 id=\"surprise\"\u003eSurprise\u003c/h2\u003e\n\u003cp\u003eFinally the day came, I left my office and reached home as soon as I could. I turned on my computer and opened the Hangouts link and stared at it for a long time. The chat was supposed to start at 9.00 PM IST, but no one connected to the link except me. At 9.30 PM, I had a knock on my door and to my surprise it was Akash Shukla \u0026amp; John Souchak with a few camera guys. Video chat was the height of my imagination, I could never imagine John Souchak \u003cem\u003e(the guy who started the certifications program)\u003c/em\u003e, coming to my house and talking to me. John told me about how this is his first time in India and he visited alumni in other cities before coming to Mumbai. They told me that they planned on making a video on my journey and would publish it on Google Developers India’s YouTube channel. I mean, I have subscribed to that channel and seen others’ stories and here I was being told that my story would be published as well. They asked me about my journey and how I got into Android Development, I was super nervous as I had never been in front of a camera and as a result I fumbled a bit and messed up here and there but there were no retakes for me to fix things. 🙁\u003c/p\u003e\n\u003cp\u003eAfter that, they gave me another surprise probably the biggest one I have ever received in my entire life.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003ch6 id=\"invitation-to-google-io-2017-all-expenses-paid-\"\u003eInvitation to Google I/O 2017. All expenses paid. 😍\u003c/h6\u003e\n\u003c/blockquote\u003e\n\u003cp align=\"center\"\u003e\n    \u003cimg src=\"/images/blogs/aad_perks/visit/one.webp\" width=\"40%\" height=\"250\"\u003e\n    \u003cimg src=\"/images/blogs/aad_perks/visit/two.webp\" width=\"40%\" height=\"250\"\u003e\n\u003c/p\u003e\n\u003cp align=\"center\"\u003e\n    \u003cimg src=\"/images/blogs/aad_perks/visit/three.webp\" width=\"40%\" height=\"200\"\u003e\n    \u003cimg src=\"/images/blogs/aad_perks/visit/four.webp\" width=\"40%\" height=\"200\"\u003e\n\u003c/p\u003e\n\u003ch2 id=\"aad-summit\"\u003eAAD Summit\u003c/h2\u003e\n\u003cp\u003e\u003cstrong\u003eFirst times\u003c/strong\u003e — Lot of things were happening for the first time.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eAttending a developer summit.\u003c/li\u003e\n\u003cli\u003eBoarding a flight.\u003c/li\u003e\n\u003cli\u003eVisiting Bengaluru.\u003c/li\u003e\n\u003cli\u003eVisiting Google’s office.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eIt was a two day event. I met Akash \u0026amp; John again and we got to see Google’s Bengaluru office and I met a lot of other Android Developers. I had a great time meeting others with the same interests as me and talking to them was fun because everyone understood the \u003cem\u003eAndroid lingo\u003c/em\u003e.\u003c/p\u003e\n\u003cp align=\"center\"\u003e\n    \u003cimg src=\"/images/blogs/aad_perks/blr/one.webp\"\u003e\n\u003c/p\u003e\n\u003chr\u003e\n\u003ch2 id=\"google-io-2017\"\u003eGoogle I/O 2017\u003c/h2\u003e\n\u003cp\u003e\u003cstrong\u003eFirst Times\u003c/strong\u003e — Lot of first times this time as well.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eTravelling alone.\u003c/li\u003e\n\u003cli\u003eTravelling outside of India.\u003c/li\u003e\n\u003cli\u003eBoarding an international flight.\u003c/li\u003e\n\u003cli\u003eVisiting Silicon Valley || California || USA.\u003c/li\u003e\n\u003cli\u003eVisiting Googleplex. \u003cem\u003e(The far fetched dream I mentioned earlier)\u003c/em\u003e\u003c/li\u003e\n\u003cli\u003eAttending I/O in person.\u003c/li\u003e\n\u003cli\u003eSeeing Sundar Pichai in real life. \u003cem\u003e(Not up close, but still)\u003c/em\u003e\u003c/li\u003e\n\u003cli\u003eInteracting with different people from around the globe.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eAttending Google I/O was a lifetime experience for me. I hope every developer attends this Developer Conference at least once. Currently, I couldn’t think of attending Google I/O or visiting USA in general because of financial restrictions. Surely sometime in the future, but not any time soon. I was flabbergasted when they invited me to I/O. I was there for a week and that was one of the best experiences of my life. I met Akash \u0026amp; John on the day I landed and they gave us a tour of the Googleplex \u003cem\u003e(which is orders of magnitude better than what I had imagined)\u003c/em\u003e. I had a great time at the conference talking to Googlers, developers from other parts of the world, meeting people whom I admired and looked up to, running around Sandboxes witnessing fantastic things created by Developers. I also got a lot of freebies like T-shirt (obvious), Google Home, Photobook, Droids, stickers, a photo of my brainwaves and a lot more. After the conference ended, I went to San Francisco and stayed there for a couple of days and did what tourists normally do in SF \u003cem\u003e(Golden Gate Bridge, Alcatraz Island, Fisherman’s Wharf, Lombard Street, Ghirardelli Square and much more)\u003c/em\u003e. I also visited Chipotle which was a few blocks from my hotel because a friend had literally threatened me saying if I didn’t eat a burrito at Chipotle, I would have to face some serious consequences. I also had to buy chocolates for friends and family back in India \u003cem\u003e(that’s how it works)\u003c/em\u003e.\u003c/p\u003e\n\u003cp align=\"center\"\u003e\n    \u003cimg src=\"/images/blogs/aad_perks/io/one.webp\"\u003e\n\u003c/p\u003e\n\u003chr\u003e\n\u003ch2 id=\"youtube-video\"\u003eYouTube Video\u003c/h2\u003e\n\u003cp align=\"center\"\u003e\n    \u003cimg src=\"/images/blogs/aad_perks/yt/one.webp\"\u003e\n\u003c/p\u003e\n\u003cp\u003eAfter I/O, it was back to normal again. No more surprises. I started attending events more often now. GDGs, Solve For India roadshow, ML Roadshow, etc. I completely forgot about the video that was shot because it had been months and they hadn’t released anyone’s story yet. Then the Associate Android Developer stories started rolling out somewhere around August. I knew every person whose video was being published and I congratulated them personally. I was eagerly waiting for my video at the start but then the fear of messing up in the video hit me so hard that I actually started hoping they would scrap my video and never publish it on YouTube. Then one day, I received an email from a Googler informing me that they would be publishing my story in a few hours. I became restless, it was the same feeling as we generally get on a day when some important result is going to be announced. I received a notification few hours later, I sat in a corner, plugged in my earphones and watched the video. I have to admit that the video turned out to be much better than I expected. There are some parts where I messed up but I can live with that. And now when I see anyone’s story \u003cem\u003e(not just developer stories, but anyone’s journey in general)\u003c/em\u003e, I am much more forgiving about petty errors and mistakes they make as now I have realized that we aren’t actors who would flawlessly say or do something on screen but are normal guys having a tough time hiding our nervousness and excitement while saying what we want to.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003ch6 id=\"dont-judge-me-when-i-fumble-or-make-a-grammatical-mistake-while-speaking-when-youre-watching-this-video\"\u003eDon’t judge me when I fumble or make a grammatical mistake while speaking when you’re watching this video.\u003c/h6\u003e\n\u003c/blockquote\u003e\n\n\n    \n    \u003cdiv style=\"position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;\"\u003e\n      \u003ciframe allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" allowfullscreen=\"allowfullscreen\" loading=\"eager\" referrerpolicy=\"strict-origin-when-cross-origin\" src=\"https://www.youtube.com/embed/KySt9FPGD8k?autoplay=0\u0026controls=1\u0026end=0\u0026loop=0\u0026mute=0\u0026start=0\" style=\"position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;\" title=\"YouTube video\"\n      \u003e\u003c/iframe\u003e\n    \u003c/div\u003e\n\n\u003chr\u003e\n\u003ch2 id=\"google-developer-days-india\"\u003eGoogle Developer Days, India\u003c/h2\u003e\n\u003cp\u003eGoogle Developer Days were announced. And I was glad they were hosting a GDD in Bengaluru, India. This was supposed to be the biggest event by Google in India till date. I was pretty excited about it. I registered for it and was immediately added to their wait list. I hoped I would get a reservation but I knew it would be difficult as this wasn’t just any event. People from all around the world would have registered for it. Luckily, after a few weeks I received a mail from Google stating that all of the AADs would have a guaranteed spot in the event. I had a great time at the event and it was much like the I/O experience but at a smaller scale. I met a lot of people and some of them recognized me because of the video and asked me for guidance in taking up the exam. That feeling when someone would start the conversation with “I saw your video” was just amazing. I got a lot of freebies here as well like T-shirt (obvious), some more T-shirts, VR Headset, Android Things kit, stickers and a lot more. This was in the most literal sense, mini I/O. Also, the weather in Bengaluru this time was just awesome. Last time when I visited Bengaluru for the summit in April, I was pretty disappointed with the weather as its known for its wonderful weather and all of the hype seemed justified this time.\u003c/p\u003e\n\u003cp align=\"center\"\u003e\n    \u003cimg src=\"/images/blogs/aad_perks/gdd/one.webp\"\u003e\n\u003c/p\u003e\n\u003chr\u003e\n\u003ch2 id=\"recognition\"\u003eRecognition\u003c/h2\u003e\n\u003cp\u003eAfter the video was published, a lot of people congratulated me and told me that my story has inspired them to work harder. Lot of people commented on the YouTube video \u003cem\u003e(I have read each and every one of them)\u003c/em\u003e, lot of my friends commented on the FB post I shared commenting how proud they felt after watching the video. I got crazy number of friend requests on FB and connection requests on LinkedIn. My college professors, batchmates, seniors \u0026amp; juniors messaged me saying how inspirational the video was and wished me all the best for my future endeavors. My family members watched the video on loop for a couple of days after it was published. My colleagues have appreciated the hard work I have put in but they also constantly keep on joking about my obsession with Google.\u003c/p\u003e\n\u003cp align=\"center\"\u003e\n    \u003cimg src=\"/images/blogs/aad_perks/rec/one.webp\"\u003e\n\u003c/p\u003e\n\u003ch2 id=\"lastly\"\u003eLastly,\u003c/h2\u003e\n\u003cp\u003eIf you are an Android Developer who made it to the end of this blog but still isn’t convinced to take the exam, check these out\u003c/p\u003e\n\u003cp align=\"center\"\u003e\n    \u003cimg src=\"/images/blogs/aad_perks/android/one.webp\"\u003e\n\u003c/p\u003e\n\u003cblockquote\u003e\n\u003ch6 id=\"yes-i-got-to-take-a-photo-with-the-legends-of-the-android-world\"\u003eYes! I got to take a photo with the legends of the Android World.\u003c/h6\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eP.S: I do realize that this blog has turned out to be a pretty big one. But the things that happened have been much bigger than this and they had to be penned down. 2017 was surely filled with a lot of surprises and I hope 2018 can be as much exciting as 2017, if not more. 😜\u003c/p\u003e\n","description":"","image":"/images/blogs/aad_perks/cover.jpeg","permalink":"https://cyrilpillai.com/blogs/aad_perks/","title":"Perks of being an Associate Android Developer "}]